apply plugin: 'maven'
apply plugin: 'maven-publish'

task loggerSourcesJar(type: Jar) {
    classifier = 'sources'
    if (plugins.hasPlugin("java-library")) {
        from sourceSets.main.java.srcDirs
    } else if (plugins.hasPlugin("com.android.library")) {
        from android.sourceSets.main.java.sourceFiles
    } else if (plugins.hasPlugin('groovy')) {
        from sourceSets.main.groovy.srcDirs
    }
}

artifacts {
    archives loggerSourcesJar
}

task loggerUpload(dependsOn: [uploadArchives, loggerSourcesJar]) {
    //println "上传日志 ：${versionNameKey}"
}

uploadArchives {
    repositories {
        mavenDeployer {
            String versionNameKey = "${project.name.replace("-", "_").toUpperCase()}_VERSION"
            String versionName = getVersionNameValue(versionNameKey)
            println "准备上传：" + project.name + versionName

            if (versionName == null || versionName.equals("")) {
                println "上传出错：root gradle.properties 中未定义的versionName。属性的 ${versionNameKey}"
            }

            pom.project {
                packaging = 'aar'
                groupId = GROUP
                artifactId = POM_ARTIFACT_ID
                version = versionName
            }

            repository(url: rootProject.RELEASE_REPOSITORY_URL) {
                authentication(userName: rootProject.USERNAME, password: rootProject.PASSWORD)
            }

            snapshotRepository(url: rootProject.SNAPSHOT_REPOSITORY_URL) {
                authentication(userName: rootProject.USERNAME, password: rootProject.PASSWORD)
            }
            println "上传完成 ：${versionNameKey}"
        }
    }
}

// 从 gradle.properties 提取版本号
def getVersionNameValue(String key) {
    File file = rootProject.file('gradle.properties')
    String value = "";
    if (file.exists()) {
        //加载资源
        InputStream inputStream = file.newDataInputStream();
        Properties properties = new Properties()
        properties.load(inputStream)

        if (properties.containsKey(key)) {
            value = properties.getProperty(key)
        }
    }
    return value
}
